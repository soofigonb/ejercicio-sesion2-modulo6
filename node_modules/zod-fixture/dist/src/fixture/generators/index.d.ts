import { AnyGenerator } from './any';
import { ArrayGenerator } from './array';
import { BigIntGenerator, BigIntMultipleOfGenerator } from './bigint';
import { BooleanGenerator } from './boolean';
import { BrandedGenerator } from './branded';
import { DateGenerator } from './date';
import { DefaultGenerator } from './default';
import { PreprocessGenerator, RefinementGenerator, TransformGenerator } from './effects';
import { EnumGenerator, NativeEnumGenerator } from './enum';
import { FunctionGenerator } from './function';
import { IntersectionGenerator } from './intersection';
import { LazyGenerator } from './lazy';
import { LiteralGenerator } from './literal';
import { MapGenerator } from './map';
import { NanGenerator } from './nan';
import { NeverGenerator } from './never';
import { NullGenerator } from './null';
import { NullableGenerator } from './nullable';
import { NumberGenerator } from './number';
import { ObjectGenerator, RecordGenerator } from './object';
import { OptionalGenerator } from './optional';
import { PromiseGenerator } from './promise';
import { ReadonlyGenerator } from './readonly';
import { SetGenerator } from './set';
import { Cuid2Generator, CuidGenerator, DateTimeGenerator, EmailGenerator, IpGenerator, RegexGenerator, StringGenerator, UlidGenerator, UrlGenerator, UuidGenerator } from './string';
import { SymbolGenerator } from './symbol';
import { TupleGenerator } from './tuple';
import { UndefinedGenerator, VoidGenerator } from './undefined';
import { DiscriminatedUnionGenerator, UnionGenerator } from './union';
import { UnknownGenerator } from './unknown';
export declare const DEFAULT_FIXTURE_GENERATORS: (import("../../transformer/generator").Definition<import("zod").ZodAny> | import("../../transformer/generator").Definition<import("zod").ZodArray<import("zod").ZodTypeAny, "many">> | import("../../transformer/generator").Definition<import("zod").ZodBigInt> | import("../../transformer/generator").Definition<import("zod").ZodBoolean> | import("../../transformer/generator").Definition<import("zod").ZodBranded<import("zod").ZodTypeAny, PropertyKey>> | import("../../transformer/generator").Definition<import("zod").ZodDate> | import("../../transformer/generator").Definition<import("zod").ZodDefault<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodEffects<import("zod").ZodTypeAny, any, any>> | import("../../transformer/generator").Definition<import("zod").ZodEnum<[string, ...string[]]>> | import("../../transformer/generator").Definition<import("zod").ZodNativeEnum<import("zod").EnumLike>> | import("../../transformer/generator").Definition<import("zod").ZodFunction<import("zod").ZodTuple<[], import("zod").ZodTypeAny>, import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodIntersection<import("zod").ZodTypeAny, import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodLazy<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodLiteral<unknown>> | import("../../transformer/generator").Definition<import("zod").ZodMap<import("zod").ZodTypeAny, import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodNaN> | import("../../transformer/generator").Definition<import("zod").ZodNever> | import("../../transformer/generator").Definition<import("zod").ZodNull> | import("../../transformer/generator").Definition<import("zod").ZodNullable<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodNumber> | import("../../transformer/generator").Definition<import("zod").ZodObject<import("zod").ZodRawShape, import("zod").UnknownKeysParam, import("zod").ZodTypeAny, {
    [x: string]: any;
}, {
    [x: string]: any;
}>> | import("../../transformer/generator").Definition<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodOptional<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodPromise<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodReadonly<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodSet<import("zod").ZodTypeAny>> | import("../../transformer/generator").Definition<import("zod").ZodString> | import("../../transformer/generator").Definition<import("zod").ZodSymbol> | import("../../transformer/generator").Definition<import("zod").ZodTuple<[import("zod").ZodTypeAny, ...import("zod").ZodTypeAny[]], null>> | import("../../transformer/generator").Definition<import("zod").ZodUndefined> | import("../../transformer/generator").Definition<import("zod").ZodVoid> | import("../../transformer/generator").Definition<import("zod").ZodUnion<readonly [import("zod").ZodTypeAny, ...import("zod").ZodTypeAny[]]>> | import("../../transformer/generator").Definition<import("zod").ZodDiscriminatedUnion<string, import("zod").ZodDiscriminatedUnionOption<string>[]>> | import("../../transformer/generator").Definition<import("zod").ZodUnknown>)[];
export { AnyGenerator, ArrayGenerator, BigIntGenerator, BigIntMultipleOfGenerator, BooleanGenerator, BrandedGenerator, Cuid2Generator, CuidGenerator, DateGenerator, DateTimeGenerator, DefaultGenerator, DiscriminatedUnionGenerator, EmailGenerator, EnumGenerator, FunctionGenerator, IntersectionGenerator, IpGenerator, LazyGenerator, LiteralGenerator, MapGenerator, NanGenerator, NativeEnumGenerator, NeverGenerator, NullGenerator, NullableGenerator, NumberGenerator, ObjectGenerator, OptionalGenerator, PreprocessGenerator, PromiseGenerator, ReadonlyGenerator, RecordGenerator, RefinementGenerator, RegexGenerator, SetGenerator, StringGenerator, SymbolGenerator, TransformGenerator, TupleGenerator, UlidGenerator, UndefinedGenerator, UnionGenerator, UnknownGenerator, UrlGenerator, UuidGenerator, VoidGenerator, };
